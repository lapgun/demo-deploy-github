<script setup lang="ts">
import { cn } from '../../lib/utils'
import {
  Table,
  TableBody,
  TableCell,
  TableHead,
  TableHeader,
  TableRow,
} from '../../components/ui/table'
import { onMounted, PropType } from 'vue'
import { PaginationType } from '@/types/table'
import { OPTIONS_PAGE_SIZE } from '@/constants/common'
import { range } from '@/utils'

const props = defineProps({
  rowsData: {
    type: Array,
    required: true,
  },
  pagination: {
    type: Object as PropType<PaginationType>,
    required: true,
  },
})

onMounted(() => {
  console.log('rowsData', props.rowsData)
})

const emits = defineEmits(['onChangePage', 'onChangePageSize'])

const onChangePage = (page: number) => {
  emits('onChangePage', page)
}

const onChangePageSize = (size: number) => {
  emits('onChangePageSize', size)
}

const headers = [
  {
    label: '削除',
    className: '',
    keyValue: 'isDelete',
  },
  {
    label: '項目コード',
    className: '',
    keyValue: 'itemCode',
  },
  {
    label: '項目名',
    className: '',
    keyValue: 'itemName',
  },
  {
    label: '単価',
    className: '',
    keyValue: 'price',
  },
  {
    label: '削除',
    className: '',
    keyValue: 'isDelete',
  },
  {
    label: '項目コード',
    className: '',
    keyValue: 'itemCode',
  },
  {
    label: '項目名',
    className: '',
    keyValue: 'itemName',
  },
  {
    label: '単価',
    className: '',
    keyValue: 'price',
  },
]
</script>

<template>
  <div>
    <div class="content-header flex pb-5 grid grid-flow-row-dense grid-cols-12">
      <div class="total-item col-span-4 content-center">
        {{ `${pagination.startIndex} - ${pagination.endIndex} 件(全 ${pagination.totalRecord}件)` }}
      </div>
      <div class="pagination col-span-4 justify-center flex">
        <Pagination :pagination="pagination" @onChangePage="onChangePage" />
      </div>
      <div class="group-btn col-span-4 justify-end flex">
        <Button class="bg-white text-sky-700 hover:bg-wite border border-sky-700 mr-2">
          全選択
        </Button>
        <Button class="bg-white text-sky-700 hover:bg-wite border border-sky-700 mr-2">
          全解除
        </Button>
        <Selection
          :pageSize="pagination.pageSize"
          :options="OPTIONS_PAGE_SIZE"
          @onChange="onChangePageSize"
        />
      </div>
    </div>
    <div class="content-table max-h-[378px] overflow-auto border-b">
      <Table>
        <colgroup class="w-[4%]" />
        <colgroup class="w-[12%]" />
        <colgroup class="w-[24%]" />
        <colgroup class="w-[10%]" />
        <colgroup class="w-[4%]" />
        <colgroup class="w-[12%]" />
        <colgroup class="w-[24%]" />
        <colgroup class="w-[10%]" />
        <TableHeader class="top-0 sticky z-10">
          <TableRow class="hover:bg-indigo-100">
            <TableHead class="text-left" v-for="(item, index) in headers" :key="index">
              {{ item.label }}
            </TableHead>
          </TableRow>
        </TableHeader>
        <TableBody class="border">
          <TableRow
            class="font-medium"
            v-for="indexRow in range(
              (pagination.page - 1) * pagination.pageSize,
              pagination.page * pagination.pageSize,
              2
            )"
            :key="indexRow"
          >
            <TableCell>
              <div class="flex justify-center items-center">
                <FormCheckbox v-model="rowsData[indexRow].isDelete" />
              </div>
            </TableCell>
            <TableCell>
              <SearchInput v-model="rowsData[indexRow].itemCode" />
            </TableCell>
            <TableCell> {{ rowsData[indexRow].itemName }}</TableCell>
            <TableCell> <FormInput v-model="rowsData[indexRow].price" /> </TableCell>
            <template v-if="indexRow + 1 < pagination.totalRecord">
              <TableCell>
                <div class="flex justify-center items-center">
                  <FormCheckbox v-model="rowsData[indexRow + 1].isDelete" />
                </div>
              </TableCell>
              <TableCell>
                <SearchInput v-model="rowsData[indexRow + 1].itemCode" />
              </TableCell>
              <TableCell> {{ rowsData[indexRow + 1].itemName }}</TableCell>
              <TableCell> <FormInput v-model="rowsData[indexRow + 1].price" /> </TableCell>
            </template>
            <template v-else>
              <TableCell v-for="num in range(0, 4)" :key="num"></TableCell>
            </template>
          </TableRow>
        </TableBody>
      </Table>
    </div>
    <div class="content-footer pt-10 grid grid-cols-3">
      <div>
        <Button>100行追加</Button>
      </div>
      <div class="pagination flex justify-center items-center">
        <Pagination :pagination="pagination" @onChangePage="onChangePage" />
      </div>
    </div>
  </div>
  <!-- <div class="flex">
    <img :src="warning" alt="" />
    <div class="content-center ml-2">表示するデータがありません</div>
  </div> -->
</template>
